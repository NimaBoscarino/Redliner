<!DOCTYPE HTML>
<html lang="en">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
        <meta name="robots" content="index, follow">
        <title>aciTree radio-button demo - A javascript treeview control with jQuery</title>
        <meta name="description" content="A demo to show you how aciTree can be used with radio-buttons, check the plugin page to see all the functions exposed by the API">
        <meta name="keywords" content="aciTree, treeview, control, tree view, javascript, jQuery">
        <link rel="stylesheet" type="text/css" href="css/aciTree.css" media="all">
        <link rel="stylesheet" type="text/css" href="css/demo.css" media="all">
        <script type="text/javascript" src="js/jquery.min.js"></script>
        <script type="text/javascript" src="js/jquery.aciPlugin.min.js"></script>
        <script type="text/javascript" src="js/jquery.aciTree.dom.js"></script>
        <script type="text/javascript" src="js/jquery.aciTree.core.js"></script>
        <script type="text/javascript" src="js/jquery.aciTree.selectable.js"></script>
        <script type="text/javascript" src="js/jquery.aciTree.radio.js"></script>
        <script type="text/javascript" src="js/jquery.aciTree.checkbox.js"></script>
    </head>
    <body>

        <div>

            <p>This is a demo to show you using aciTree with radio-buttons. The <b>radio</b> flag need to be set for each item into the JSON data when
                both radio and checkbox extensions are included.<br>
                By default, all items will have a radio button (if <b>radio</b> is missing from the JSON data).</p>

            <p>When a radio is checked, first child from each level under the selected one will be checked by default. Also, the parents
                will be checked all the way up to the root item.<br>All others branches will be unchecked. This functionality will break once there is a missing radio button
                (with the default options set). In this way you can form radio button groups.</p>

            <p>Note: the radio buttons on the same level (and under a parent) need to have the same field name attribute. If you need to use custom input names for each
                branch, ensure you keep this in mind when you choose them.<br>
                When loading nodes, the checked/unchecked state need to be correctly set in the JSON data.</p>

            

            <div id="tree-combined" class="aciTree"><div>                    
                    <br>With checkbox + radio button sample</div></div>

            <div class="log">Tree Log... <a class="clear_log" style="font-size:10px" href="#" title="Clear the LOG" target="_blank">clear log</a>
                <div></div></div>

            <script class="code" type="text/javascript">

                $(function(){

                    

                    // init the tree
                    $('#tree-combined').aciTree({
                        ajax: {
                            url: '/BienHoa-Collaboration/Home/GetACITreeTOCJsonData'
                        },
                        checkbox: true,
                        radio: true,
                        unique: false, /* if TRUE then when a node is opened all other nodes are closed; */
                        multiSelectable: true,
                        checkboxChain: 1, /* when FALSE the change of the selection state will not be propagated to the parent/children nodes, if it's equal with -1 then only the parent nodes will be updated, if it's equal with 1 then only the children nodes will be updated; */
                        radioChain: true /* when FALSE the change of the selection state will not be propagated to the parent/children nodes; */
                    });

                });

            </script>
            <!--
     id: 'folder_1',
                label: 'This is Folder 1',
                inode: true,
                open: false,
                icon: 'folder'
                branch:

    Currently, the folowing item data object properties are reserved/used by aciTree:

        id
        label
        icon
        inode
        open
        checkbox
        radio
        checked
        selected
        disabled
        branch
        source
    I recommend you to put a `_` character at the beginning of any custom property, this avoids as a custom property to interfere with one defined later by aciTree. The item data can be read later with the .itemData method.
                -->


            init options
            {
            ajax: {
                url: null,
                dataType: 'json'
            },
            dataSource: null,
            rootData: null,
            queue: {
                async: 4,
                interval: 50,
                delay: 10
            },
            loaderDelay: 500,
            expand: false,
            collapse: false,
            unique: false,
            empty: false,
            selectable: true,           // selectable extension
            multiSelectable: false,     // selectable extension
            fullRow: false,             // selectable extension
            textSelection: false,       // selectable extension
            checkbox: false,            // checkbox extension
            checkboxChain: true,        // checkbox extension
            checkboxBreak: true,        // checkbox extension
            checkboxClick: false,       // checkbox extension
            radio: false,               // radio extension
            radioChain: true,           // radio extension
            radioBreak: true,           // radio extension
            radioClick: false,          // radio extension
            columnData: [],             // column extension
            editable: false,            // editable extension
            editDelay: 250,             // editable extension
            persist: null,              // persist extension
            selectHash: null,           // hash extension
            openHash: null,             // hash extension
            sortable: false,            // sortable extension
            sortDelay: 750,             // sortable extension
            sortDrag: function(item, placeholder, isValid, helper),                         // sortable extension
            sortValid: function(item, hover, before, isContainer, placeholder, helper),     // sortable extension
            sortOptions: {},            // sortable extension
            show: {
            props: {
            'height': 'show'
            },
            duration: 'medium',
            easing: 'linear'
            },
            animateRoot: true,
            hide: {
            props: {
            'height': 'hide'
            },
            duration: 'medium',
            easing: 'linear'
            },
            view: {
            duration: 'medium',
            easing: 'linear'
            },
            autoInit: true,             // aciPlugin
            ajaxHook: function(item, settings),
            itemHook: function(parent, item, itemData, level),
            filterHook: function(item, search, regexp),                                     // utils extension
            serialize: function(item, what, value)
            }

            <script type="text/javascript">

                $(function(){

                    var log = $('.log div');

                    // write to log
                    $('#tree,#tree-combined').on('acitree', function(event, api, item, eventName, options){
                        if (api.isItem(item)){
                            log.prepend('<p>' + eventName + ' [' + api.getId(item) + ']</p>');
                        } else {
                            log.prepend('<p>' + eventName + ' [tree]</p>');
                        }
                    });

                    $('.clear_log').click(function(){
                        $('.log div').html('');
                        return false;
                    });

                });

            </script>

        </div>

        <script type="text/javascript">

            $(function() {

                $('script.code').each(function() {
                    $(this).before('<div style="clear:both;margin:10px 0 10px 0"><pre style="padding:20px;border:1px dashed #000;background:#f6f6f6;display:inline-block;"></pre></div>');
                    $(this).prev('div').find('pre').text($(this).html());
                });

            });

        </script>

    </body>
</html>